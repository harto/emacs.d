;; Note: some configuration also exists in early-init.el

;; # Package management

(require 'package)
(add-to-list 'package-archives '("melpa" . "https://stable.melpa.org/packages/") t)
(add-to-list 'package-archives '("melpa-unstable" . "https://melpa.org/packages/") t)

;; https://github.com/jwiegley/use-package
(eval-when-compile
  (require 'use-package))

;; # Config management

;; Configuration set via the Customize system is automatically put in this file
;; by default. I don't want a bunch of autogenerated cruft added here, so I
;; store it in a separate file. Also, the use-package macro has a way to specify
;; Custom variables inline, so I prefer to do that where possible.
(setq custom-file "~/.emacs-custom.el")
(load custom-file nil t)

;; Put temp and config files in a consistent place.
(use-package no-littering
  :ensure t
  :config
  ;; Opt to store Emacs backup and auto-save files in a centralised
  ;; (out-of-the-way) location. By default Emacs stores an auto-save files
  ;; (etc.) in the same directory as the original file, which can interfere with
  ;; tools that watch directories for changes (auto-recompilation processes,
  ;; Dropbox, etc.)
  (setq auto-save-file-name-transforms
        `((".*" ,(let ((dir (no-littering-expand-var-file-name "auto-save/")))
                   (make-directory dir t)
                   dir) t)))
  (setq backup-directory-alist
        `((".*" . ,(let ((dir (no-littering-expand-var-file-name "backup/")))
                     (make-directory dir t)
                     dir)))))

;; # General preferences

;; quieter startup
(setq inhibit-startup-screen t)
(setq initial-scratch-message nil)

;; silence bell (perhaps only relevant in terminal?)
(setq ring-bell-function 'ignore)

;; prompt for y/n rather than yes/no
(defalias 'yes-or-no-p 'y-or-n-p)

;; no warnings for rarely-used features
(put 'downcase-region 'disabled nil)
(put 'narrow-to-region 'disabled nil)
(put 'scroll-left 'disabled nil)        ; still need this?
(put 'set-goal-column 'disabled nil)

;; hide usage instructions in *Completion* buffer
(setq completion-show-help nil)

;; no prompt for following symlinks
(setq vc-follow-symlinks nil)

;; encodings: UTF-8 everywhere by default
(set-language-environment 'utf-8)
(set-default-coding-systems 'utf-8)
(set-selection-coding-system 'utf-8)
(prefer-coding-system 'utf-8)
(set-locale-environment "en_AU.UTF-8")
(setq-default buffer-file-coding-system 'utf-8-unix)

;; whitespace
(setq-default indent-tabs-mode nil)
(setq-default require-final-newline t)
(setq-default tab-width 4)
(setq-default ws-trim-level 1)  ; only trim modified lines
(setq-default fill-column 80)

;; Avoid warnings about dumb terminals in subprocesses
(setenv "PAGER" "cat")

;; # Personal helper functions and utilities

(add-to-list 'load-path "~/.emacs.d/lisp")
(load "keys")
(load "modes")
(load "modeline")
(load "search")
(load "utils")
(load (if (display-graphic-p) "gui" "console"))
;; My library of work helper functions lives outside this repo, so I don't
;; accidentally reveal anything sensitive.
(load "~/remix/remix.el" t)

;; # Finalise configuration

;; (from https://blog.d46.us/advanced-emacs-startup/)

;; Log startup time metrics
(add-hook 'emacs-startup-hook
          (lambda ()
            (message "Ready in %.2f seconds (%d garbage collections)"
                     (float-time (time-subtract after-init-time before-init-time))
                     gcs-done)))

;; Increase garbage collection threshold from 800KB -> 2MB. This is meant to
;; result in fewer pauses for garbage collection.
(setq gc-cons-threshold (* 2 1000 1000))
